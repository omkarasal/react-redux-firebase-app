{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","store/actions/actionTypes.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/layout/Loader.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebase.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","id","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","Notifications","notifications","notification","user","content","style","margin","time","fromNow","Loader","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","handleDelete","deleteProject","match","params","history","push","handleBack","goBack","marginLeft","ownProps","data","projectId","getFirestore","doc","delete","catch","error","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","response","set","CreateProject","createProject","authorId","add","Date","App","exact","path","component","Boolean","window","location","hostname","initialState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ea002a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <NavLink to=\"/create\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut}>Logout</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{ props.profile.initials }</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import * as actionTypes from './actionTypes';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(() => {\r\n            dispatch({ type: actionTypes.LOGIN_SUCCESS })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: actionTypes.LOGIN_ERROR, error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut()\r\n        .then(() => {\r\n            dispatch({ type: actionTypes.SIGN_OUT })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        )\r\n        .then((response) => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        })\r\n        .then(() => {\r\n            dispatch({ type: actionTypes.SIGNUP_SUCCESS })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: actionTypes.SIGNUP_ERROR, error })\r\n        })\r\n    }\r\n}","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\r\nexport const CREATE_PROJECT = 'CREATE_PROJECT';\r\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\nexport const DELETE_PROJECT_ERROR = 'DELETE_PROJECT_ERROR';","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper grey darken-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">ProjectApp</Link>\r\n                    { links }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link to={'/project/' + project.id} key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <ul className=\"collection with-header\">\r\n                <li className=\"collection-header\"><h6>Notifications</h6></li>\r\n                {\r\n                    notifications && notifications.map(notification => {\r\n                        return (\r\n                            <li className=\"collection-item\" key={notification.id}>\r\n                                <span className=\"red-text\">{ notification.user } </span>\r\n                                <span>{ notification.content }</span>\r\n                                <p className=\"grey-text\" style={{margin: 0}}>{ moment(notification.time.toDate()).fromNow() }</p>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"overlay-wrapper\">\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"loader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport Notifications from './Notifications';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport Loader from '../layout/Loader';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { projects, auth } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        if(projects){\r\n            return(\r\n                <div className=\"dashboard container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6\">\r\n                            <ProjectList projects={projects} />\r\n                        </div>\r\n                        <div className=\"col s12 m5 offset-m1\">\r\n                            <Notifications notifications={this.props.notifications} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Loader />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteProject } from '../../store/actions/projectActions';\r\nimport Loader from '../layout/Loader';\r\n\r\nclass ProjectDetails extends Component {\r\n    handleDelete = () => {\r\n        this.props.deleteProject(this.props.match.params.id);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render(){\r\n        const { project, auth } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        if(project) {\r\n            return (\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">{ project.title }</span>\r\n                            <p>{ project.content }</p>\r\n                        </div>\r\n                        <div className=\"card-action gret lighten-4 grey-text\">\r\n                            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                            <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n                        </div>\r\n                    </div>\r\n                    <a className=\"waves-effect waves-light red btn\" onClick={this.handleDelete}>Delete</a>\r\n                    <a className=\"waves-effect waves-light grey btn\" style={{marginLeft: '5px'}} onClick={this.handleBack}>Back</a>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Loader />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteProject: (id) => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import * as actionTypes from './actionTypes';\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // async call\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            dispatch({\r\n                type: actionTypes.CREATE_PROJECT,\r\n                project\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: actionTypes.CREATE_PROJECT_ERROR, error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProject = (projectId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // async call\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').doc(projectId).delete()\r\n        .then(() => {\r\n            dispatch({\r\n                type: actionTypes.DELETE_PROJECT\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({ type: actionTypes.DELETE_PROJECT_ERROR, error })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom'; \r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"card white\">\r\n                    <div className=\"card-content\">\r\n                        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                            <div className=\"red-text center\">\r\n                                { authError ? <p>{ authError }</p> : null }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"card white\">\r\n                    <div className=\"card-content\">\r\n                        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                            <div className=\"text-red center\">\r\n                                {authError ? <p>{authError}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"card white\">\r\n                    <div className=\"card-content\">\r\n                        <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"content\">Project Content</label>\r\n                            <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>  \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    authError: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: ''\r\n            }\r\n        case 'SIGN_OUT':\r\n            console.log('Logout')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: ''\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created project: ', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Error: ', action.error);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log('Project deleted');\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('Error: ', action.error);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore' \r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyB5YiGxgBs3NKHNKO-xA7HW4MBicZ07rOE\",\r\n    authDomain: \"react-redux-firebase-app-38ce5.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-app-38ce5.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-app-38ce5\",\r\n    storageBucket: \"react-redux-firebase-app-38ce5.appspot.com\",\r\n    messagingSenderId: \"660836806702\",\r\n    appId: \"1:660836806702:web:88127835a739f855502fbf\",\r\n    measurementId: \"G-EXCFYCXJG6\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport firebase from './config/firebase';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(\n            thunk.withExtraArgument({ getFirebase, getFirestore })\n        ),\n        reduxFirestore(firebase),\n        reactReduxFirebase(firebase, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    ) \n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})"],"sourceRoot":""}